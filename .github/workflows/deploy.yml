name: Deploy SQL Scripts to SQL Server

# Triggers the workflow on push to main or development branches
on:
  push:
    branches:
      - main
      - development

jobs:
  deploy:
    runs-on: windows-latest
    env:
      # Hardcoded credentials for debugging (Replace with actual values)
      SQL_SERVER: 192.168.12.86,1433           # e.g., sqlserver.example.com or 192.168.1.100
      SQL_USER: User               # e.g., db_user
      SQL_PASSWORD: Sashank9#           # e.g., P@ssw0rd!
      DB_NAME: Senior-Year-Students

    steps:
      # Step 1: Checkout the repository to get the SQL scripts
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install SQL Server module and sqlcmd
      - name: Install SQL Server module and sqlcmd
        run: |
          # Install SqlServer PowerShell module
          Install-Module -Name SqlServer -Force -AllowClobber
          Import-Module SqlServer

          # Install sqlcmd via Chocolatey
          choco install sqlcmd -y

      # Step 2a: Verify sqlcmd installation (Optional but recommended)
      - name: Verify sqlcmd installation
        run: |
          sqlcmd -?
      
      # Step 3: Debug Environment Variables (For Verification)
      - name: Debug Environment Variables
        run: |
          Write-Host "SQL_SERVER is set to: $env:SQL_SERVER"
          Write-Host "SQL_USER is set to: $env:SQL_USER"
          Write-Host "DB_NAME is set to: $env:DB_NAME"
        shell: pwsh

      # Step 4: Create Database if it does not exist
      - name: Create Database if not exists
        shell: pwsh
        run: |
          sqlcmd -S $env:SQL_SERVER -U $env:SQL_USER -P '$env:SQL_PASSWORD' -Q "IF NOT EXISTS(SELECT * FROM sys.databases WHERE name = '$env:DB_NAME') BEGIN CREATE DATABASE [$env:DB_NAME] END"

      # Step 5: Run Students_Table.sql script
      - name: Run Students_Table.sql script
        shell: pwsh
        run: |
          sqlcmd -S $env:SQL_SERVER -U $env:SQL_USER -P '$env:SQL_PASSWORD' -d $env:DB_NAME -i ./scripts/Students_Table.sql

      # Step 6: Run Subject.sql script
      - name: Run Subject.sql script
        shell: pwsh
        run: |
          sqlcmd -S $env:SQL_SERVER -U $env:SQL_USER -P '$env:SQL_PASSWORD' -d $env:DB_NAME -i ./scripts/Subject.sql
          # Check for errors
